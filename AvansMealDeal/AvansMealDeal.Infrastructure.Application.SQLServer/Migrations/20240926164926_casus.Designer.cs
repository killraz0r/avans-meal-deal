// <auto-generated />
using System;
using AvansMealDeal.Infrastructure.Application.SQLServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvansMealDeal.Infrastructure.Application.SQLServer.Migrations
{
    [DbContext(typeof(DbContextApplicationSqlServer))]
    [Migration("20240926164926_casus")]
    partial class casus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AvansMealDeal.Domain.Models.Canteen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<bool>("OffersHotMeals")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Canteens");
                });

            modelBuilder.Entity("AvansMealDeal.Domain.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ContainsAlcohol")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("AvansMealDeal.Domain.Models.MealPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CanteenId")
                        .HasColumnType("int");

                    b.Property<int>("MealPackageType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("PickupDeadline")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CanteenId");

                    b.ToTable("MealsPackages");
                });

            modelBuilder.Entity("AvansMealDeal.Domain.Models.MealPackageItem", b =>
                {
                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<int>("MealPackageId")
                        .HasColumnType("int");

                    b.HasKey("MealId", "MealPackageId");

                    b.HasIndex("MealPackageId");

                    b.ToTable("MealPackageItem");
                });

            modelBuilder.Entity("AvansMealDeal.Domain.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MealPackageId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("PlannedPickup")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MealPackageId")
                        .IsUnique();

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AvansMealDeal.Domain.Models.MealPackage", b =>
                {
                    b.HasOne("AvansMealDeal.Domain.Models.Canteen", "Canteen")
                        .WithMany("MealPackages")
                        .HasForeignKey("CanteenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canteen");
                });

            modelBuilder.Entity("AvansMealDeal.Domain.Models.MealPackageItem", b =>
                {
                    b.HasOne("AvansMealDeal.Domain.Models.Meal", "Meal")
                        .WithMany("MealPackages")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvansMealDeal.Domain.Models.MealPackage", "MealPackage")
                        .WithMany("Meals")
                        .HasForeignKey("MealPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("MealPackage");
                });

            modelBuilder.Entity("AvansMealDeal.Domain.Models.Reservation", b =>
                {
                    b.HasOne("AvansMealDeal.Domain.Models.MealPackage", "MealPackage")
                        .WithOne("Reservation")
                        .HasForeignKey("AvansMealDeal.Domain.Models.Reservation", "MealPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MealPackage");
                });

            modelBuilder.Entity("AvansMealDeal.Domain.Models.Canteen", b =>
                {
                    b.Navigation("MealPackages");
                });

            modelBuilder.Entity("AvansMealDeal.Domain.Models.Meal", b =>
                {
                    b.Navigation("MealPackages");
                });

            modelBuilder.Entity("AvansMealDeal.Domain.Models.MealPackage", b =>
                {
                    b.Navigation("Meals");

                    b.Navigation("Reservation");
                });
#pragma warning restore 612, 618
        }
    }
}
